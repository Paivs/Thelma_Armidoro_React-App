{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport var storeUserData = function () {\n  var _ref = _asyncToGenerator(function* (username, password) {\n    try {\n      yield AsyncStorage.setItem('username', username);\n      yield AsyncStorage.setItem('password', password);\n    } catch (error) {\n      console.log(error);\n    }\n  });\n  return function storeUserData(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getUserData = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    try {\n      var username = yield AsyncStorage.getItem('username');\n      var password = yield AsyncStorage.getItem('password');\n      if (username !== null && password !== null) {\n        console.log(username, password);\n        return username;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  });\n  return function getUserData() {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["AsyncStorage","storeUserData","_ref","_asyncToGenerator","username","password","setItem","error","console","log","_x","_x2","apply","arguments","getUserData","_ref2","getItem"],"sources":["D:/PROGBOYS/ThelmaArmidoro/react/thelma-armidoro-N2/src/services/saveData.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n// armazena o nome de usuário e senha em AsyncStorage\r\nexport const storeUserData = async (username, password) => {\r\n  try {\r\n    await AsyncStorage.setItem('username', username);\r\n    await AsyncStorage.setItem('password', password);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// recupera o nome de usuário e senha de AsyncStorage\r\nexport const getUserData = async () => {\r\n  try {\r\n    const username = await AsyncStorage.getItem('username');\r\n    const password = await AsyncStorage.getItem('password');\r\n    if (username !== null && password !== null) {\r\n      // faça algo com as informações recuperadas, como fazer login automaticamente\r\n      console.log(username, password);\r\n      return username\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"],"mappings":";AAAA,OAAOA,YAAY,MAAM,2CAA2C;AAGpE,OAAO,IAAMC,aAAa;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,QAAQ,EAAEC,QAAQ,EAAK;IACzD,IAAI;MACF,MAAML,YAAY,CAACM,OAAO,CAAC,UAAU,EAAEF,QAAQ,CAAC;MAChD,MAAMJ,YAAY,CAACM,OAAO,CAAC,UAAU,EAAED,QAAQ,CAAC;IAClD,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAAA,gBAPYN,aAAaA,CAAAS,EAAA,EAAAC,GAAA;IAAA,OAAAT,IAAA,CAAAU,KAAA,OAAAC,SAAA;EAAA;AAAA,GAOzB;AAGD,OAAO,IAAMC,WAAW;EAAA,IAAAC,KAAA,GAAAZ,iBAAA,CAAG,aAAY;IACrC,IAAI;MACF,IAAMC,QAAQ,SAASJ,YAAY,CAACgB,OAAO,CAAC,UAAU,CAAC;MACvD,IAAMX,QAAQ,SAASL,YAAY,CAACgB,OAAO,CAAC,UAAU,CAAC;MACvD,IAAIZ,QAAQ,KAAK,IAAI,IAAIC,QAAQ,KAAK,IAAI,EAAE;QAE1CG,OAAO,CAACC,GAAG,CAACL,QAAQ,EAAEC,QAAQ,CAAC;QAC/B,OAAOD,QAAQ;MACjB;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAAA,gBAZYO,WAAWA,CAAA;IAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAYvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}